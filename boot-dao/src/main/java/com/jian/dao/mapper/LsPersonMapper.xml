<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jian.dao.LsPersonMapper">
  <resultMap id="BaseResultMap" type="com.jian.entity.LsPerson">
    <id column="cardId" jdbcType="VARCHAR" property="cardid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="personType" jdbcType="INTEGER" property="persontype" />
    <result column="photo" jdbcType="VARCHAR" property="photo" />
    <result column="version" jdbcType="BIGINT" property="version" />
    <result column="action" jdbcType="INTEGER" property="action" />
    <result column="merchant_id" jdbcType="VARCHAR" property="merchantId" />
    <result column="start_date" jdbcType="TIMESTAMP" property="startDate" />
    <result column="end_date" jdbcType="TIMESTAMP" property="endDate" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.jian.entity.LsPerson">
    <result column="photoFeatrue" jdbcType="LONGVARBINARY" property="photofeatrue" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cardId, name, personType, photo, version, action, merchant_id, start_date, end_date
  </sql>
  <sql id="Blob_Column_List">
    photoFeatrue
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.jian.entity.LsPersonExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ls_person
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.jian.entity.LsPersonExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ls_person
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ls_person
    where cardId = #{cardid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from ls_person
    where cardId = #{cardid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.jian.entity.LsPersonExample">
    delete from ls_person
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jian.entity.LsPerson">
    insert into ls_person (cardId, name, personType, 
      photo, version, action, 
      merchant_id, start_date, end_date, 
      photoFeatrue)
    values (#{cardid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{persontype,jdbcType=INTEGER}, 
      #{photo,jdbcType=VARCHAR}, #{version,jdbcType=BIGINT}, #{action,jdbcType=INTEGER}, 
      #{merchantId,jdbcType=VARCHAR}, #{startDate,jdbcType=TIMESTAMP}, #{endDate,jdbcType=TIMESTAMP}, 
      #{photofeatrue,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.jian.entity.LsPerson">
    insert into ls_person
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cardid != null">
        cardId,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="persontype != null">
        personType,
      </if>
      <if test="photo != null">
        photo,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="action != null">
        action,
      </if>
      <if test="merchantId != null">
        merchant_id,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
      <if test="photofeatrue != null">
        photoFeatrue,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cardid != null">
        #{cardid,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="persontype != null">
        #{persontype,jdbcType=INTEGER},
      </if>
      <if test="photo != null">
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=BIGINT},
      </if>
      <if test="action != null">
        #{action,jdbcType=INTEGER},
      </if>
      <if test="merchantId != null">
        #{merchantId,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="photofeatrue != null">
        #{photofeatrue,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jian.entity.LsPersonExample" resultType="java.lang.Long">
    select count(*) from ls_person
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ls_person
    <set>
      <if test="record.cardid != null">
        cardId = #{record.cardid,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.persontype != null">
        personType = #{record.persontype,jdbcType=INTEGER},
      </if>
      <if test="record.photo != null">
        photo = #{record.photo,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=BIGINT},
      </if>
      <if test="record.action != null">
        action = #{record.action,jdbcType=INTEGER},
      </if>
      <if test="record.merchantId != null">
        merchant_id = #{record.merchantId,jdbcType=VARCHAR},
      </if>
      <if test="record.startDate != null">
        start_date = #{record.startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endDate != null">
        end_date = #{record.endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.photofeatrue != null">
        photoFeatrue = #{record.photofeatrue,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update ls_person
    set cardId = #{record.cardid,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      personType = #{record.persontype,jdbcType=INTEGER},
      photo = #{record.photo,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=BIGINT},
      action = #{record.action,jdbcType=INTEGER},
      merchant_id = #{record.merchantId,jdbcType=VARCHAR},
      start_date = #{record.startDate,jdbcType=TIMESTAMP},
      end_date = #{record.endDate,jdbcType=TIMESTAMP},
      photoFeatrue = #{record.photofeatrue,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ls_person
    set cardId = #{record.cardid,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      personType = #{record.persontype,jdbcType=INTEGER},
      photo = #{record.photo,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=BIGINT},
      action = #{record.action,jdbcType=INTEGER},
      merchant_id = #{record.merchantId,jdbcType=VARCHAR},
      start_date = #{record.startDate,jdbcType=TIMESTAMP},
      end_date = #{record.endDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jian.entity.LsPerson">
    update ls_person
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="persontype != null">
        personType = #{persontype,jdbcType=INTEGER},
      </if>
      <if test="photo != null">
        photo = #{photo,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=BIGINT},
      </if>
      <if test="action != null">
        action = #{action,jdbcType=INTEGER},
      </if>
      <if test="merchantId != null">
        merchant_id = #{merchantId,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null">
        end_date = #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="photofeatrue != null">
        photoFeatrue = #{photofeatrue,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where cardId = #{cardid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jian.entity.LsPerson">
    update ls_person
    set name = #{name,jdbcType=VARCHAR},
      personType = #{persontype,jdbcType=INTEGER},
      photo = #{photo,jdbcType=VARCHAR},
      version = #{version,jdbcType=BIGINT},
      action = #{action,jdbcType=INTEGER},
      merchant_id = #{merchantId,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=TIMESTAMP},
      end_date = #{endDate,jdbcType=TIMESTAMP},
      photoFeatrue = #{photofeatrue,jdbcType=LONGVARBINARY}
    where cardId = #{cardid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jian.entity.LsPerson">
    update ls_person
    set name = #{name,jdbcType=VARCHAR},
      personType = #{persontype,jdbcType=INTEGER},
      photo = #{photo,jdbcType=VARCHAR},
      version = #{version,jdbcType=BIGINT},
      action = #{action,jdbcType=INTEGER},
      merchant_id = #{merchantId,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=TIMESTAMP},
      end_date = #{endDate,jdbcType=TIMESTAMP}
    where cardId = #{cardid,jdbcType=VARCHAR}
  </update>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="com.jian.entity.LsPersonExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ls_person
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="com.jian.entity.LsPersonExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ls_person
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>